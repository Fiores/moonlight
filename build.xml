<?xml version="1.0" encoding="UTF-8"?>
<project name="libtabun" default="all">
  
  
  <property file="build.properties"/>
  <!-- Uncomment the following property if no tests compilation is needed -->
  <!-- 
  <property name="skip.tests" value="true"/>
   -->
  
  <!-- Compiler options -->
  
  <property name="compiler.debug" value="on"/>
  <property name="compiler.generate.no.warnings" value="off"/>
  <property name="compiler.args" value=""/>
  <property name="compiler.max.memory" value="128m"/>
  <patternset id="ignored.files">
    <exclude name="**/CVS/**"/>
    <exclude name="**/SCCS/**"/>
    <exclude name="**/RCS/**"/>
    <exclude name="**/rcs/**"/>
    <exclude name="**/.DS_Store/**"/>
    <exclude name="**/.svn/**"/>
    <exclude name="**/.pyc/**"/>
    <exclude name="**/.pyo/**"/>
    <exclude name="**/*.pyc/**"/>
    <exclude name="**/*.pyo/**"/>
    <exclude name="**/.git/**"/>
    <exclude name="**/*.hprof/**"/>
    <exclude name="**/_svn/**"/>
    <exclude name="**/.hg/**"/>
    <exclude name="**/*.lib/**"/>
    <exclude name="**/*~/**"/>
    <exclude name="**/__pycache__/**"/>
    <exclude name="**/.bundle/**"/>
    <exclude name="**/*.rbc/**"/>
    <exclude name="**/*.orig/**"/>
  </patternset>
  <patternset id="library.patterns">
    <include name="*.zip"/>
    <include name="*.apk"/>
    <include name="*.war"/>
    <include name="*.egg"/>
    <include name="*.ear"/>
    <include name="*.ane"/>
    <include name="*.swc"/>
    <include name="*.jar"/>
  </patternset>
  <patternset id="compiler.resources">
    <exclude name="**/?*.java"/>
    <exclude name="**/?*.form"/>
    <exclude name="**/?*.class"/>
    <exclude name="**/?*.groovy"/>
    <exclude name="**/?*.scala"/>
    <exclude name="**/?*.flex"/>
    <exclude name="**/?*.kt"/>
    <exclude name="**/?*.clj"/>
  </patternset>
  
  <!-- JDK definitions -->
  
  <property name="jdk.bin.openjdk_1.7" value="${jdk.home.openjdk_1.7}/bin"/>
  <path id="jdk.classpath.openjdk_1.7">
    <fileset dir="${jdk.home.openjdk_1.7}">
      <include name="jre/lib/compilefontconfig.jar"/>
      <include name="jre/lib/rhino.jar"/>
      <include name="jre/lib/jsse.jar"/>
      <include name="jre/lib/jce.jar"/>
      <include name="jre/lib/javazic.jar"/>
      <include name="jre/lib/management-agent.jar"/>
      <include name="jre/lib/charsets.jar"/>
      <include name="jre/lib/rt.jar"/>
      <include name="jre/lib/resources.jar"/>
      <include name="jre/lib/ext/sunpkcs11.jar"/>
      <include name="jre/lib/ext/pulse-java.jar"/>
      <include name="jre/lib/ext/sunjce_provider.jar"/>
      <include name="jre/lib/ext/zipfs.jar"/>
      <include name="jre/lib/ext/java-atk-wrapper.jar"/>
      <include name="jre/lib/ext/dnsns.jar"/>
      <include name="jre/lib/ext/localedata.jar"/>
    </fileset>
  </path>
  
  <property name="project.jdk.home" value="${jdk.home.openjdk_1.7}"/>
  <property name="project.jdk.bin" value="${jdk.bin.openjdk_1.7}"/>
  <property name="project.jdk.classpath" value="jdk.classpath.openjdk_1.7"/>
  
  
  <!-- Global Libraries -->
  
  <path id="library.http_utilities.classpath">
    <pathelement location="/home/cab404/Документы/Всякие проектные ресурсы/Библиотеки Java/google-http-java-client-1.15.0-rc/libs/commons-logging-1.1.1.jar"/>
    <pathelement location="/home/cab404/Документы/Всякие проектные ресурсы/Библиотеки Java/google-http-java-client-1.15.0-rc/libs/httpclient-4.0.1.jar"/>
    <pathelement location="/home/cab404/Документы/Всякие проектные ресурсы/Библиотеки Java/google-http-java-client-1.15.0-rc/libs/httpcore-4.0.1.jar"/>
  </path>
  
  <path id="library.javolution.classpath">
    <pathelement location="/home/cab404/Документы/Всякие проектные ресурсы/Библиотеки Java/javolution.jar"/>
  </path>
  
  <path id="library.json.classpath">
    <pathelement location="/home/cab404/Документы/Всякие проектные ресурсы/Библиотеки Java/json-simple-1.1.1.jar"/>
  </path>
  
  <!-- Modules -->
  
  
  <!-- Module libtabun -->
  
  <dirname property="module.libtabun.basedir" file="${ant.file}"/>
  
  
  <property name="module.jdk.home.libtabun" value="${project.jdk.home}"/>
  <property name="module.jdk.bin.libtabun" value="${project.jdk.bin}"/>
  <property name="module.jdk.classpath.libtabun" value="${project.jdk.classpath}"/>
  
  <property name="compiler.args.libtabun" value="${compiler.args}"/>
  
  <property name="libtabun.output.dir" value="${path.variable.workspace_loc}/libtabun/out/production/libtabun"/>
  <property name="libtabun.testoutput.dir" value="${path.variable.workspace_loc}/libtabun/out/test/libtabun"/>
  
  <path id="libtabun.module.bootclasspath">
    <!-- Paths to be included in compilation bootclasspath -->
  </path>
  
  <path id="libtabun.module.production.classpath">
    <path refid="${module.jdk.classpath.libtabun}"/>
    <path refid="library.json.classpath"/>
    <path refid="library.javolution.classpath"/>
    <path refid="library.http_utilities.classpath"/>
  </path>
  
  <path id="libtabun.runtime.production.module.classpath">
    <pathelement location="${libtabun.output.dir}"/>
    <path refid="library.json.classpath"/>
    <path refid="library.javolution.classpath"/>
    <path refid="library.http_utilities.classpath"/>
  </path>
  
  <path id="libtabun.module.classpath">
    <path refid="${module.jdk.classpath.libtabun}"/>
    <pathelement location="${libtabun.output.dir}"/>
    <path refid="library.json.classpath"/>
    <path refid="library.javolution.classpath"/>
    <path refid="library.http_utilities.classpath"/>
  </path>
  
  <path id="libtabun.runtime.module.classpath">
    <pathelement location="${libtabun.testoutput.dir}"/>
    <pathelement location="${libtabun.output.dir}"/>
    <path refid="library.json.classpath"/>
    <path refid="library.javolution.classpath"/>
    <path refid="library.http_utilities.classpath"/>
  </path>
  
  
  <patternset id="excluded.from.module.libtabun">
    <patternset refid="ignored.files"/>
  </patternset>
  
  <patternset id="excluded.from.compilation.libtabun">
    <patternset refid="excluded.from.module.libtabun"/>
  </patternset>
  
  <path id="libtabun.module.sourcepath">
    <dirset dir="${path.variable.workspace_loc}/libtabun">
      <include name="src"/>
    </dirset>
  </path>
  
  <path id="libtabun.module.test.sourcepath">
    <dirset dir="${path.variable.workspace_loc}/libtabun">
      <include name="src/com/cab404/libtabun/example"/>
    </dirset>
  </path>
  
  
  <target name="compile.module.libtabun" depends="compile.module.libtabun.production,compile.module.libtabun.tests" description="Compile module libtabun"/>
  
  <target name="compile.module.libtabun.production" description="Compile module libtabun; production classes">
    <mkdir dir="${libtabun.output.dir}"/>
    <javac destdir="${libtabun.output.dir}" debug="${compiler.debug}" nowarn="${compiler.generate.no.warnings}" memorymaximumsize="${compiler.max.memory}" fork="true" executable="${module.jdk.bin.libtabun}/javac">
      <compilerarg line="${compiler.args.libtabun}"/>
      <bootclasspath refid="libtabun.module.bootclasspath"/>
      <classpath refid="libtabun.module.production.classpath"/>
      <src refid="libtabun.module.sourcepath"/>
      <patternset refid="excluded.from.compilation.libtabun"/>
    </javac>
    
    <copy todir="${libtabun.output.dir}">
      <fileset dir="${path.variable.workspace_loc}/libtabun/src">
        <patternset refid="compiler.resources"/>
        <type type="file"/>
      </fileset>
    </copy>
  </target>
  
  <target name="compile.module.libtabun.tests" depends="compile.module.libtabun.production" description="compile module libtabun; test classes" unless="skip.tests">
    <mkdir dir="${libtabun.testoutput.dir}"/>
    <javac destdir="${libtabun.testoutput.dir}" debug="${compiler.debug}" nowarn="${compiler.generate.no.warnings}" memorymaximumsize="${compiler.max.memory}" fork="true" executable="${module.jdk.bin.libtabun}/javac">
      <compilerarg line="${compiler.args.libtabun}"/>
      <bootclasspath refid="libtabun.module.bootclasspath"/>
      <classpath refid="libtabun.module.classpath"/>
      <src refid="libtabun.module.test.sourcepath"/>
      <patternset refid="excluded.from.compilation.libtabun"/>
    </javac>
    
    <copy todir="${libtabun.testoutput.dir}">
      <fileset dir="${path.variable.workspace_loc}/libtabun/src/com/cab404/libtabun/example">
        <patternset refid="compiler.resources"/>
        <type type="file"/>
      </fileset>
    </copy>
  </target>
  
  <target name="clean.module.libtabun" description="cleanup module">
    <delete dir="${libtabun.output.dir}"/>
    <delete dir="${libtabun.testoutput.dir}"/>
  </target>
  
  <target name="init" description="Build initialization">
    <!-- Perform any build initialization in this target -->
  </target>
  
  <target name="clean" depends="clean.module.libtabun" description="cleanup all"/>
  
  <target name="build.modules" depends="init, clean, compile.module.libtabun" description="build all modules"/>
  
  <target name="init.artifacts">
    <property name="artifacts.temp.dir" value="${basedir}/__artifacts_temp"/>
    <property name="artifact.output.libtabun" value="${path.variable.workspace_loc}/sweetieBot/libs"/>
    <property name="artifact.output.libtabun-sources" value="${path.variable.workspace_loc}/libtabun/out/artifacts/libtabun_sources"/>
    <mkdir dir="${artifacts.temp.dir}"/>
    <property name="temp.jar.path.libtabun.jar" value="${artifacts.temp.dir}/libtabun.jar"/>
    <property name="temp.jar.path.libtabun-sources.jar" value="${artifacts.temp.dir}/libtabun-sources.jar"/>
  </target>
  
  <target name="artifact.libtabun" depends="init.artifacts, compile.module.libtabun" description="Build &#39;libtabun&#39; artifact">
    <property name="artifact.temp.output.libtabun" value="${artifacts.temp.dir}/libtabun"/>
    <mkdir dir="${artifact.temp.output.libtabun}"/>
    <jar destfile="${temp.jar.path.libtabun.jar}" duplicate="preserve" filesetmanifest="mergewithoutmain">
      <zipfileset file="${path.variable.workspace_loc}/libtabun/META-INF/MANIFEST.MF" prefix="META-INF"/>
      <zipfileset dir="${libtabun.output.dir}"/>
    </jar>
    <copy file="${temp.jar.path.libtabun.jar}" tofile="${artifact.temp.output.libtabun}/libtabun.jar"/>
  </target>
  
  <target name="artifact.libtabun-sources" depends="init.artifacts" description="Build &#39;libtabun-sources&#39; artifact">
    <property name="artifact.temp.output.libtabun-sources" value="${artifacts.temp.dir}/libtabun_sources"/>
    <mkdir dir="${artifact.temp.output.libtabun-sources}"/>
    <jar destfile="${temp.jar.path.libtabun-sources.jar}" duplicate="preserve" filesetmanifest="mergewithoutmain">
      <zipfileset dir="${path.variable.workspace_loc}/libtabun/src"/>
      <zipfileset file="${path.variable.workspace_loc}/libtabun/META-INF/MANIFEST.MF" prefix="META-INF"/>
    </jar>
    <copy file="${temp.jar.path.libtabun-sources.jar}" tofile="${artifact.temp.output.libtabun-sources}/libtabun-sources.jar"/>
  </target>
  
  <target name="build.all.artifacts" depends="artifact.libtabun, artifact.libtabun-sources" description="Build all artifacts">
    <mkdir dir="${artifact.output.libtabun}"/>
    <copy todir="${artifact.output.libtabun}">
      <fileset dir="${artifact.temp.output.libtabun}"/>
    </copy>
    <mkdir dir="${artifact.output.libtabun-sources}"/>
    <copy todir="${artifact.output.libtabun-sources}">
      <fileset dir="${artifact.temp.output.libtabun-sources}"/>
    </copy>
    
    <!-- Delete temporary files -->
    <delete dir="${artifacts.temp.dir}"/>
  </target>
  
  <target name="all" depends="build.modules, build.all.artifacts" description="build all"/>
</project>